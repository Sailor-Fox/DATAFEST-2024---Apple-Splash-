---
title: "Radhika QMD"
format: revealjs
editor: visual
---

## Distribution of EOC across textbooks

```{r EOC, echo=FALSE, warning=FALSE}
library(magrittr)
library(tidyverse)
checkpoints_eoc <- read.csv("checkpoints_eoc.csv")

checkpoints_eoc %>%
  ggplot() +
  geom_density(aes(EOC)) +
  facet_wrap(~book) +
  labs(title = "Density of EOC by book", x = "grade", y = "density") +
  theme_minimal() +
  theme(strip.text = element_text(size =5))
```

## Spread in grades and engagement

-   Does this match with EOC data?

```{r tilemap, echo=FALSE, warning=FALSE}
pageviewsbychapter1 <- page_views %>%
  mutate(date = substr(dt_accessed, start = 1, stop = 10)) %>%
  mutate(weekday = weekdays(as.Date(date))) %>%
  filter(!is.na(chapter_number)) %>%
  filter(!is.na(engaged)) %>%
  select(student_id, chapter_number, engaged) %>%
  mutate(interval = round(engaged/600000, 0)) %>%
  group_by(chapter_number, student_id) %>%
  mutate(time = sum(interval)) %>%
  filter(time<36) %>%
  select(student_id, chapter_number, time) %>%
  distinct() %>%
  mutate(count = 1) %>%
  select(student_id, chapter_number, count, time)

table1 <- pageviewsbychapter1[order(pageviewsbychapter1$chapter_number, pageviewsbychapter1$time), ] %>%
  group_by(chapter_number, time) %>%
  summarise(N = sum(count), .groups="keep")

p1 <- ggplot(table1, aes(chapter_number, time)) +
  geom_tile(aes(fill = N), colour = "grey", na.rm = TRUE) +
  scale_fill_gradient(low="white", high="blue") +
  guides(fill=guide_legend(title="Total students")) +
  labs(title = "Heat map of students by chapter and 10-min intervals",
       x = "Chapter number",
       y = "10-Minute intervals") +
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
  scale_x_continuous(breaks = seq(min(table1$chapter_number, na.rm = TRUE), max(table1$chapter_number, na.rm = TRUE), by = 1)) +
  scale_y_continuous(breaks = seq(min(table1$time, na.rm = TRUE), max(table1$time, na.rm = TRUE), by = 1)) 

p2 <- checkpoints_eoc %>%
  ggplot(aes(x=reorder(as.character(chapter_number), as.numeric(chapter_number)), y=EOC)) +
  geom_boxplot() +
  labs(title = "EOC statistics by chapter, faceted by book", x="chapter", y="EOC")+
  scale_x_discrete() +
  theme_minimal()

p1+p2
```

## Recommendation: Increasing addressable market

```{r identifying timezone, warning=FALSE, echo=FALSE}
page_views %>%
  mutate(GMT = substr(dt_accessed, start = 12, stop = 19)) %>% 
  select(institution_id, GMT) %>% 
  mutate(basetime = hms::as_hms(GMT)) %>% 
  mutate(basetime = as.integer(basetime / 3600)) %>% 
  mutate(pacifictime = basetime - 8) %>% 
  ggplot(aes(x = pacifictime)) +
    geom_bar() +
  facet_wrap(~institution_id, scales = "free_y") +
  labs(title = "Page Views by Pacific Time",
       x = "Pacific Time",
       y = "Frequency") +
  theme_minimal() +
  theme(strip.text = element_text(size=4))
```

```{r heatmaps, echo=FALSE, warning=FALSE}
states1 <- states(cb = TRUE, class = "sf") %>%
  filter(!as.numeric(STATEFP) %in% c(2, 15, 60, 66, 69, 72, 78)) %>%
  right_join(heatmap_data, by = c("NAME" = "state")) %>%
  mutate(percentkata = course_kata/stem_degree)

states1 %>%
  ggplot(aes(fill = percentkata)) +
  geom_sf() +
  scale_fill_gradient(low="white", high="honeydew3") +
  guides(fill=guide_legend(title="% of STEM instituitions using CourseKata")) +
  labs(title = "Heat map of STEM institutions using CourseKata (Current market)") +
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())

states2 <- states(cb = TRUE, class = "sf") %>%
  filter(!as.numeric(STATEFP) %in% c(2, 15, 60, 66, 69, 72, 78)) %>%
  right_join(heatmap_data, by = c("NAME" = "state")) %>%
  mutate(percentagestem = stem_degree/all_degree*100)

states2 %>%
  ggplot(aes(fill = percentagestem)) +
  geom_sf() +
  scale_fill_gradient(low="honeydew3", high="blue") +
  guides(fill=guide_legend(title = " % of STEM instituitions in USA")) +
  labs(title = "Heat map of STEM institutions in USA (Total addressable market)") +
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
```

## Code

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```
